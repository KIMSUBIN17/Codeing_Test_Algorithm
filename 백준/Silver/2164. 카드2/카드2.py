from collections import deque

# 입력
n = int(input())

# 사용할 큐 초기화_1부터 N까지 카드 번호를 큐에 저장
queue = deque(range(1, n + 1))

while len(queue) > 1:
    queue.popleft()        #맨 앞 카드 버리기
    queue.append(queue.popleft())        # 맨 앞 카드를 뒤로 보내기
    
# 남은 카드 출력
print(queue[0])



'''
* 문제풀이과정
1. 문제 분석
- 첫번째 카드를 버린다 -> 큐의 pop연산
- 두번재 카드를 맨 뒤로 보낸다 -> 큐의 append
2. 왜 큐를 선택했는가?
- 큐는 양쪽 끝에서 삽입/삭제가 가능
(파이썬의 collections.deque를 사용하면, O(1) 시간 복잡도로 삽입과 삭제를 처리할 수 있음)
3. 입력 크기를 고려해야함
- N이 최대 500,000까지 주어질 수 있으므로, 단순 리스트 사용시 앞쪽 요소 제거가 O(N)이기 때문에
시간 초과가 발생할 가능성도 있음

# 문제 풀이 아이디어
1. 큐 초기화 : 큐에 1부터 N까지 카드번호를 순서대로 넣는다
2. 반복작업
- 큐의 맨 앞 카드를 제거
- 새로운 맨 앞 카드를 큐의 맨 뒤로 보낸다 (queue.append(queue.popleft())로 맨 앞 카드를 제거하면서 동시에 뒤로 추가 가능)
    -->큐의 길이가 1이 되면 반복 종료
3. 큐에 카드가 한 장 남으면 출력

--> 전체 시간복잡도 : O(N)
'''
