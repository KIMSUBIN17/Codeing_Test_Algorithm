/* 링크 : https://programmers.co.kr/learn/courses/30/lessons/42746 */

def solution(numbers):
    numbers = list(map(str,numbers))
    numbers.sort(key=lambda x:x * 3, reverse=True)
        
    return str(int(''.join(numbers)))

'''
다른사람의 풀이참고

1. number배열을 str으로 변환할 수있게 매핑. 
int형 list를 map을 사용해 string으로 변환. 이후 list로 변환
2. 변환된 num을 sort()로 정렬
->lambda x : x * 3은 num 인자 각각의 문자열을 3번 반복하는 것
-> x*3을 하는 이유 : num의 인수값이 1000이하이므로 3자리수로 맞춘 후 비교
-> 앞에서부터 같은 숫자패턴이 존재하는 숫자들의 비교를 숫자를 반복시킴.
기존 숫자를 반복시키게 되면 그 숫자가 앞에 왔을 때 만들 수 있는 최대 숫자를 만들 수 있음(완전한 숫자는 아니지만 어느정도 비교가 가능한 범위까지 만들 수 있음)
->list.sort()와 sorted()는 모두 비교하기 전에 각 리스트 요소에 대해 호출할 함수를 지정하는 key 매개 변수를 가지고 있습니다.
x * 3 -> 문자열에 3을 곱해주면 해당문자열을 3개 나열하는 것과 같기때문에
'333', '303030', '343434', '555', '999'를 key로 넣어주면
정렬 후 303030 -> 333 -> 343434 -> 555 -> 999가 됨

3. 문자열비교는 ASCII값으로 치환되어 정렬됨.
4. sort정렬의 기본값은 오름차순이므로 reverse=True로 해서 거꾸로 정렬된 결과가 리턴됨.
5. .join(num)을 사용해 문자열을 합쳐줌
->int로 변환한 뒤 다시 str로 변환하는 이유 : 모든 값이 0인 경우('000')을 처리하기 위해 int로 변환한 뒤 다시 str로 변환함
->[0,0,0,0]을 넣으면 '0000'이 리턴되기때문에 int로 변환해 '0'으로 바꿔야함.
이후 오버플로우 방지하기 위해 str로 변환

'''